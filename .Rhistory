knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidygraph")
#install.packages("ggraph")
#devtools::install_github('thomasp85/ggraph') #only for newest insights, and not for today;)
library(tidygraph)
library(tidyverse)
library(ggraph)
library(ggplot2)
nodes <- read.csv("https://kateto.net/workshops/data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("https://kateto.net/workshops/data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
head(nodes)
head(edges)
### your code
### plot()
### your code
### your code
### your code
### your code
# ggraph(news_media) +
# geom_edge_link(color=...) + geom_node_text(aes(label =...), repel=TRUE)+ #geom_node_point()
### your code
ggraph(news_media, layout='linear') +
geom_edge_arc(color="gray") + geom_node_text(aes(label = media), repel=TRUE)+ geom_node_point()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidygraph")
#install.packages("ggraph")
#devtools::install_github('thomasp85/ggraph') #only for newest insights, and not for today;)
library(tidygraph)
library(tidyverse)
library(ggraph)
library(ggplot2)
nodes <- read.csv("https://kateto.net/workshops/data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
edges <- read.csv("https://kateto.net/workshops/data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
head(nodes)
head(edges)
news_media<-tbl_graph(nodes,edges)
news_media
plot(news_media)
media_hyper<-news_media %>% activate(edges) %>% filter(type=="hyperlink")
media_hyper
plot(media_hyper)
media_mention <- news_media %>% activate(edges) %>% filter(type=="mention")
media_mention
plot(media_mention)
media_mention %>% graph_join(media_hyper) %>% plot()
media_reversed<-news_media %>% activate(edges)%>%reroute(from = to, to = from)
plot(media_reversed)
ggraph(news_media) +
geom_edge_link(color="gray") + geom_node_text(aes(label = media), repel=TRUE) + geom_node_point()
ggraph(news_media) +
geom_edge_link(aes(color = type)) +
geom_node_text(aes(label = media))
ggraph(news_media, layout='linear') +
geom_edge_arc(color="gray") + geom_node_text(aes(label = media), repel=TRUE)+ geom_node_point()
ggraph(news_media) +
geom_edge_link(aes(alpha = weight)) +
geom_node_text(aes(label = media))
news_media%>%  activate(nodes) %>%
mutate(centrality = centrality_degree()) %>% arrange(centrality)
news_media%>%  activate(nodes) %>%
mutate(centrality = centrality_degree())%>% arrange(centrality)%>%
ggraph() +
geom_edge_link() +
geom_node_point(aes(size = centrality, colour = centrality))+ geom_node_text(aes(label = media))
